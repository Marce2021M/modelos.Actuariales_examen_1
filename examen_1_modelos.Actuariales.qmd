---
title: "NOTA TÉCNICA: Seguro dotal mixto"
subtitle: "Modelos Actuariales"
lang: es
author: "Marcelino Sánchez Rodríguez 191654"
date: today
format:
  html:
    page-layout: full
    embed-resources: true
  pdf: 
     include-in-header:  
        - text: |
            \usepackage{actuarialsymbol}
            \usepackage{booktabs}
            \usepackage{float}
     embed-resources: true
editor_options: 
  chunk_output_type: console
---


```{r, echo=FALSE, results=FALSE, warning=FALSE, message=FALSE}

# SUPUESTOS PRINCIPALES (INPUT)
# 191654

# edad del asegurado
xEdad <- 16+30


#vigencia del seguro
n <- 19


#tasa de interes efectiva anual
itasaBase <- .05



#numero de primas anuales
mPrimas <- 4


# Sumas aseguradas
saMuerte <- 2000000

saSupervivencia <- 1000000


nCarteraAsegurados <- 100

source(paste0(getwd(), "/paqueteMSRmodelos1.R"))
```

# Nota Técnica

## 1. Descripción de la cobertura del seguro

### a. Tipo de seguro

Es un seguro dotal mixto.

### b. Temporalidad

El seguro tiene una vigencia de `r n` años con primas niveladas por `r mPrimas` años anticipadamente.

### c. Población asegurada

La edad de los asegurados es de `r xEdad` años y son `r nCarteraAsegurados` asegurados.

## 2. Hipótesis demográficas y financieras

### a. Hipótesis demográfica

Utilizaremos la tabla proporcionada por la aseguradora. La cual para una persona de `r xEdad` años se ve de la siguiente manera:

```{r,  echo=FALSE}
              
# Graficamos la tabla de supervivencia

ggplot(qTablaMortalidadGraf, aes(x = kSuperv, y = px)) +
  geom_line() +
  geom_point() +
  labs(title = "Tabla de mortalidad", x = "Supervivencia", y = "px") 
```

### b. Hipótesis sobre costos

Dados los valores observados por la aseguradora tendremos los siguientes gastos.

Los gastos asociados a la prima son \$1000 más 40% de la prima en la emisión, \$500 más 20% de la prima los siguientes dos años y \$100 más 5% de la prima para el resto de los años donde se paga prima. Los gastos asociados a la liquidación son \$3,000 mas 0.3% de la suma asegurada en caso de muerte y \$1,000 mas 0.1% de la suma asegurada en caso de supervivencia.

### c. Hipótesis sobre tasa de interés

La tasa base será del `r itasaBase*100`%, porque actualmente existe la expectativa de disminución en la tasa de interés. Esto debido a que la inflación está disminuyendo, y la política de BM es bajar las tasas de interés una vez controlada la inflación. Además, como el seguro tiene una vigencia de `r n` años esperamos que disminuya aún más manteniendose en promedio del `r itasaBase*100`%.

## 3. Procedimientos técnicos


### a. Prima neta

(Fórmula para el cálculo y valor obtenido)

La prima neta está dada por la siguiente fórmula:

$$P=\frac{(`r saMuerte`)A_{`r xEdad`:\angl{`r n`}} +(`r saSupervivencia`) \Ex[`r n`]{`r xEdad`} }{\ddot{a}_{`r xEdad`:\angl{`r mPrimas`}}}$$

$$=\frac{(`r saMuerte`)(\sum_{k=0}^{`r n-1`}v^{k+1}\frac{\dx{`r xEdad`+k}}{\lx{`r xEdad`}})+(`r saSupervivencia`) v^{`r n`}\frac{\lx{`r xEdad + n`}}{\lx{`r xEdad`}}}{\sum_{k=0}^{`r n-1`}v^{k}\frac{\lx{`r xEdad`+k}}{\lx{`r xEdad`}}}$$



Con lo cual el valor de la prima neta es de \$`r primaNeta`.

### b. Prima recargada

(Fórmula para el cálculo y valor obtenido)

El valor de la prima recargada proviene de despejar G de la siguiente ecuación:

$$(3000+(1.003)(SA_M))A_{\nthtop*{1}{`r xEdad`}:\angl{`r n`}} + (1000 + (1.001)(SA_S))\Ex[`r n`]{`r xEdad`}= $$

$$-1000+.6G+(-500+.8G)(\ax**{`r xEdad`:\angl{3}}-1)+(-100+.95G)\ax**{`r xEdad+3`:\angl{`r mPrimas-3`}}(\Ex[3]{`r xEdad`})$$



Es decir, tenemos que:

$$G= \frac{(3000+(1.003)(SA_M))A_{\nthtop*{1}{`r xEdad`}:\angl{`r n`}} + (1000 + (1.001)(SA_S))\Ex[`r n`]{`r xEdad`}+1000+500((\ax**{`r xEdad`:\angl{3}}-1))+100(\ax**{`r xEdad+3`:\angl{`r mPrimas-3`}})(\Ex[3]{`r xEdad`})}{.6+.8(\ax**{`r xEdad`:\angl{3}}-1)+.95\ax**{`r xEdad+3`:\angl{`r mPrimas-3`}}(\Ex[3]{`r xEdad`})}$$




Con lo cual el valor de la prima recargada es de \$`r primaRecargada`.

### c. Valores póliza asociados a la prima neta

(Fórmula para el cálculo y valores obtenidos para toda la vigencia de la póliza)

Las fórmulas teóricas son las siguientes, pero para efectos prácticos las calcularemos con la fórmula recursiva de Fackler.

Para $k=0,...,mPrimas-1$
$$\Vx[k]{`r xEdad`: \angl{`r n`}}= \frac{1}{\Ex[k]{`r xEdad`}}(P\ax**{`r xEdad`:\angl{k}}-(SA_M)A_{\nthtop*{1}{`r xEdad`}:\angl{k}})$$

Para $k=mPrimas,...,`r n`$
$$\Vx[k]{`r xEdad`: \angl{`r n`}}= \frac{1}{\Ex[k]{`r xEdad`}}(P\ax**{`r xEdad`:\angl{4}}-(SA_M)A_{\nthtop*{1}{`r xEdad`}:\angl{k}})$$



```{r echo=FALSE}
# Cálculo de valores póliza asociados

# Creamos la tabla de valores póliza asociados a la prima neta

tablaValoresPolizaAsociados <- data.frame(k = numeric(n+1), Vx = numeric(n+1))

# Llenamos la tabla

for (k in seq(0, n, 1)){
  tablaValoresPolizaAsociados$Vx[k+1] <- valorPoliza(k, primaNeta)
  tablaValoresPolizaAsociados$k[k+1] <- k
}

#Mostramos la tabla

tablaValoresPolizaAsociados 


# Graficamos la tabla

ggplot(tablaValoresPolizaAsociados, aes(x = k, y = Vx)) +
  geom_line() +
  geom_point() +
  labs(title = "Valores póliza asociados a la prima neta", x = "k", y = "Vx") 

```


### d. Valores póliza asociados a la prima recargada

(Fórmula para el cálculo y valores obtenidos para toda la vigencia de la póliza)

Las fórmulas teóricas son las siguientes, pero para efectos prácticos las calcularemos con la fórmula recursiva de Fackler.

Para $k=0$

$$\Vx[k]{`r xEdad`: \angl{`r n`}}= 0$$

Para $k=1$

$$\Vx[k]{`r xEdad`: \angl{`r n`}}= \frac{1}{\Ex[k]{`r xEdad`}}(-1000+.6G-(3000+1.003SA_M)A_{\nthtop*{1}{`r xEdad`}:\angl{k}})$$

Para $k=2,3$

$$\Vx[k]{`r xEdad`: \angl{`r n`}}= \frac{1}{\Ex[k]{`r xEdad`}}(-1000+.6G+(-500+.8G)(\ax**{`r xEdad`:\angl{k}}-1)-(3000+1.003SA_M)A_{\nthtop*{1}{`r xEdad`}:\angl{k}})$$


Para $k=4,...,`r n`$ 

$$\Vx[k]{`r xEdad`: \angl{`r n`}}= \frac{1}{\Ex[k]{`r xEdad`}}(-1000+.6G+(-500+.8G)(\ax**{`r xEdad`:\angl{3}}-1)+(-100+.95G)(\ax**{`r xEdad+3`:\angl{`r mPrimas-3`}})(\Ex[3]{`r xEdad`})$$
$$-(3000+1.003SA_M)A_{\nthtop*{1}{`r xEdad`}:\angl{k}})$$


```{r echo=FALSE}

# Creamos la tabla de valores póliza asociados a la prima recargada

tablaValoresPolizaAsociadosRecargada <- data.frame(k = numeric(n+1), Vx = numeric(n+1))

# Llenamos la tabla

for (k in seq(0, n, 1)){
  tablaValoresPolizaAsociadosRecargada$Vx[k+1] <- valorPolizaRecargado(k, primaRecargada)
  tablaValoresPolizaAsociadosRecargada$k[k+1] <- k
}

#Mostramos la tabla

tablaValoresPolizaAsociadosRecargada


# Graficamos la tabla

ggplot(tablaValoresPolizaAsociadosRecargada, aes(x = k, y = Vx)) +
  geom_line() +
  geom_point() +
  labs(title = "Valores póliza asociados a la prima recargada", x = "k", y = "Vx") 

```


### e. Valores garantizados

(Fórmula para el cálculo y valores obtenidos mientras haya pago de primas)

Calculado retrospectivamente obtenemos la siguiente fórmula:


Los valores garantizados para la prima neta son:

```{r echo=FALSE}
# Creamos la tabla de valores garantizados

tablaValoresGarantizados <- data.frame(k = numeric(3), Vx = numeric(3))

# Llenamos la tabla

for (k in seq(1, 3, 1)){
  tablaValoresGarantizados$Vx[k] <- valoresGarantizados(valorPoliza(k, primaNeta), k)
  tablaValoresGarantizados$k[k] <- k
}

#Mostramos la tabla

tablaValoresGarantizados

```


Los valores garantizados para la prima recargada son:

```{r echo=FALSE}
# Creamos la tabla de valores garantizados

tablaValoresGarantizadosRecargada <- data.frame(k = numeric(3), Vx = numeric(3))

# Llenamos la tabla

for (k in seq(1, 3, 1)){
  tablaValoresGarantizadosRecargada$Vx[k] <- valoresGarantizados(valorPolizaRecargado(k, primaNeta), k)
  tablaValoresGarantizadosRecargada$k[k] <- k
}

#Mostramos la tabla

tablaValoresGarantizadosRecargada

```

# Profit testing

## 1. Análisis determinista


### a. Hipótesis demográficas y financieras

(Elige las variables a analizar, mínimo 2, y los supuestos realistas que vas a utilizar)

Vamos a analizar las variables de tasa de interés y de tabla de mortalidad y sus efectos en las medidas de VPN y MU. 

Nuestro mejor estimador de estas variables es que la tasa de interés con la que traeremos a valor presente todos los flujos será de 7.5%, porque se espera que las tasas  de interés bajen paulatinamente y considerando que actualmente nos encontramos con tasas altísimas del 11% aproximadamente.

Así mismo consideramos que la tabla de mortalidad será una $Gamma(8, 1/4)$, esto porque suponemos que la tala de mortalidad se comporta como una normal y queremos además modelar mayores sobrevivientes que llegan a tener 100 años.

Esta gráfica se ve la siguiene forma:

```{r, echo=F}
iTasaEstimada <- .075
tablaMortalidadEstimada <- generate_mortality_table_gamma(8)

# Gráfico
ggplot(data = tablaMortalidadEstimada, aes(x = Age, y = lx/10000)) +
  geom_line(na.rm = TRUE) +
  labs(title = paste("Tabla de Mortalidad estimada"),
       x = "Edad",
       y = "lx") +
  theme_minimal()+
  coord_cartesian(xlim = c(46, max(tablaMortalidadEstimada$Age)))
```

### b. Valor Presente Neto (VPN)

(Fórmula para el cálculo y valor obtenido)

$$VPN(r) = \sum_{k=1}^{19}F_{k}v^{k}_{r}$$

donde $F_{k}$ representa los flujos vencidos de cada año (solo durante ese año) hasta la vigencia, tomando en cuenta el final de la vigencia. 

Es decir $F_{k} = Ingreso_{k}(1+i^{*}) - Egreso_{k} - Reserva_{k}$

Donde 

$Ingreso_{k}(1+i^{*})$: es el ingreso por primas (menos gatos) y la reserva obtenida al inicio del año y traídas a valor futuro (con la tasa de inversión) que corresponde al final del año en curso con la tasa de costo de capital.(CHECAR)

$Egreso_{k}$: es el egreso obtenido al final del año (por liquidaciones de muertes y costos asociados).

$Reserva_{k}$: es la reserva que se debe componer al final del año.

$v$ es el factor de descuento que se obtiene de la tasa de costo de capital el cual suponemos que es del 16%.

Con lo que con las hipótesis planteadas obtenemos un VPN de \$`r medidaVPN(iTasa=.075, tabla_Mortalidad=generate_mortality_table_gamma(8))`.


### c. Margen de Utilidad (MU)

(Fórmula para el cálculo y valor obtenido)

$$MU(r) = \frac{VPN(r)}{\sum_{k=1}^{19}R_{k}v^{k}_{r}}$$

Donde $R_{k}$ representa la prima recargada que se cobró al inicio del año y se trae a valor presente con la tasa de costo de capital. 

Con lo cual obtenemos un MU de `r medidaMU(iTasa=.075, tabla_Mortalidad=generate_mortality_table_gamma(8))`.

## 2. Análisis estocástico

### a. Análisis stress-testing para el VPN y MU

(Escoge 2 variables y realiza el stress testing)

Escogemos las variables de tasa de interés y de tabla de mortalidad y realizamos el stress testing para el VPN y MU.

Variamos primero la tasa de interés de 3% a 10% dejando los supuestos base fijos.

```{r, echo=FALSE}
rangoTasaInteres <- seq(.03, .1, .001)
tablaMortalidadEstimada <- generate_mortality_table_gamma(8)

rangoTasaInteresVPN <- c()
rangoTasaInteresMU <- c()

# Inicialización de vectores
rangoTasaInteresVPN <- numeric(length(rangoTasaInteres))
rangoTasaInteresMU <- numeric(length(rangoTasaInteres))

for (i in seq_along(rangoTasaInteres)){
  iTasaEstimada <- rangoTasaInteres[i]
  rangoTasaInteresVPN[i] <- medidaVPN()  
  rangoTasaInteresMU[i] <- medidaMU()    
}


# Para la gráfica de VPN vs tasa de interés
ggplot() +
  geom_line(aes(x = rangoTasaInteres, y = rangoTasaInteresVPN)) +
  geom_point(aes(x = rangoTasaInteres, y = rangoTasaInteresVPN)) +
  geom_vline(aes(xintercept = 0.075), linetype="dashed", color="blue") +
  geom_vline(aes(xintercept = 0.05), linetype="dashed", color="red") +
  annotate("text", x = 0.075, y = max(rangoTasaInteresVPN), label = "Tasa Estimada") +
  annotate("text", x = 0.05, y = max(rangoTasaInteresVPN), label = "Tasa Base") +
  labs(title = "VPN vs tasa de interés", x = "Tasa de interés", y = "VPN")

# Para la gráfica de MU vs tasa de interés
ggplot() +
  geom_line(aes(x = rangoTasaInteres, y = rangoTasaInteresMU)) +
  geom_point(aes(x = rangoTasaInteres, y = rangoTasaInteresMU)) +
  geom_vline(aes(xintercept = 0.075), linetype="dashed", color="blue") +
  geom_vline(aes(xintercept = 0.05), linetype="dashed", color="red") +
  annotate("text", x = 0.075, y = max(rangoTasaInteresMU), label = "Tasa Estimada") +
  annotate("text", x = 0.05, y = max(rangoTasaInteresMU), label = "Tasa Base") +
  labs(title = "MU vs tasa de interés", x = "Tasa de interés", y = "MU")


```

Con lo cual nos damos cuenta que nuestro producto en las medidas de MU y VPN es linealmente sensible a la tasa de interés y presenta una correlación positiva con respecto a la misma. También nos damos cuenta que a partir de una tasa menor al 4% el producto deja de ser rentable.

Ahora variaremos la tabla de mortalidad cambiando los valores del parámetro $\alpha$. El efecto de estos cambios en la tabla se ven de esta forma:

```{r, echo=F, results=F}


beta_const = 1/4 # Valor constante para el parámetro de tasa
alphas = c(5,6,7,8,9) # Diferentes valores para alpha

# Crear un dataframe con valores de x y las densidades para cada alpha
df <- data.frame(x = rep(seq(0, 55, length.out = 1000), length(alphas)))
df$y <- unlist(lapply(alphas, function(alpha) (1 - pgamma(df$x[1:1000], shape = alpha, rate = beta_const))))
df$alpha <- factor(rep(alphas, each = 1000), labels = paste("alpha =", alphas))

ggplot(df, aes(x=x, y=y, color=alpha)) +
  geom_line() +
  labs(title = "Función de Supervivencia Gamma variando alpha",
       x = "x",
       y = "S(x)",
       color = "Valor de Alpha") +
  theme_minimal()
```

Es decir, entre más grande la $\alpha$ se presenta una mayor expectativa de supervivencia y por lo tanto un mayor valor en la función de supervivencia. Además, con una $\alpha$ más grande, las defunciones son menos abruptas.

Y con lo cual los cambios en VPN y MU se ven gráficamente de la siguiente forma:

```{r, echo=FALSE}
iTasaEstimada <- .05
rangoTablaMortalidad <- seq(4,9,.1)

# Inicialización de vectores

rangoTablaMortalidadVPN <- numeric(length(rangoTablaMortalidad))

rangoTablaMortalidadMU <- numeric(length(rangoTablaMortalidad))

for (i in seq_along(rangoTablaMortalidad)){
  tablaMortalidadEstimada <- generate_mortality_table_gamma(rangoTablaMortalidad[i])
  rangoTablaMortalidadVPN[i] <- medidaVPN()  
  rangoTablaMortalidadMU[i] <- medidaMU()    
}

ggplot() +
  geom_line(aes(x = rangoTablaMortalidad, y = rangoTablaMortalidadVPN)) +
  geom_point(aes(x = rangoTablaMortalidad, y = rangoTablaMortalidadVPN)) +
  geom_vline(aes(xintercept = 8), linetype="dashed", color="blue") +
  annotate("text", x = 8, y = max(rangoTablaMortalidadVPN), label = "Tabla Estimada") +
  labs(title = "VPN vs tabla de mortalidad", x = "Tabla de mortalidad", y = "VPN")

ggplot() +
  geom_line(aes(x = rangoTablaMortalidad, y = rangoTablaMortalidadMU)) +
  geom_point(aes(x = rangoTablaMortalidad, y = rangoTablaMortalidadMU)) +
  geom_vline(aes(xintercept = 8), linetype="dashed", color="blue") +
  annotate("text", x = 8, y = max(rangoTablaMortalidadMU), label = "Tabla Estimada") +
  labs(title = "MU vs tabla de mortalidad", x = "Tabla de mortalidad", y = "MU")

```

Es decir, entre más grande la $\alpha$ se presenta una mayor expectativa de supervivencia y  por lo tanto se tiene una mayor rentabilidad entre nuestro producto mixto. Con lo cual en este producto hay que tener cuidado si se presentan muchas defunciones.

### b. Análisis por escenarios para el VPN y MU

(Plantea 5 escenarios para realizar el análisis)

Ahora plantearemos 5 escenarios para realizar el análisis.

Los escenarios serán los siguientes:

# Descripción detallada de los escenarios:
1. Escenario 1 (Pesimista): Tasa de interés del 3% y tabla de mortalidad con alfa=4.
2. Escenario 2 (Conservador): Tasa de interés del 5% y tabla de mortalidad con alfa=6.
3. Escenario 3 (Estimado): Tasa de interés del 7.5% y tabla de mortalidad con alfa=8.
4. Escenario 4 (Optimista): Tasa de interés del 10% y tabla de mortalidad con alfa=9.
5.- Escenario 5 (Base): Tasa de interés del  5%  y tabla de mortalidad base con la que calculamos las reservas.

Los resultados de VPN y MU de los primeros 4 escenarios se muestran en la siguiente tabla:

```{r, echo=FALSE}
escenarios <- c("Escenario 1", "Escenario 2", "Escenario 3", "Escenario 4")
medidasEscenarios <- c("VPN", "MU")

rangoEscenariosTasa <- c(.03, .05, .075, .1)

rangoEscenariosMortalidad <- c(4, 6, 8, 9)

# Crear una matriz con NA (puedes reemplazar NA con cualquier otro valor inicial si lo prefieres)
wide_matrix <- matrix(NA, nrow = length(escenarios), ncol = length(medidasEscenarios), dimnames = list(escenarios, medidasEscenarios))

# Iterar sobre cada fila y columna de la matriz
for (i in 1:nrow(wide_matrix)) {
  # Convertir el valor ingresado a numérico y asignarlo a la celda correspondiente
  iTasaEstimada <- rangoEscenariosTasa[i]
  tablaMortalidadEstimada <- generate_mortality_table_gamma(rangoEscenariosMortalidad[i])

  wide_matrix[i, 1] <- medidaVPN()
  wide_matrix[i, 2] <- medidaMU()
}

# Mostrar la matriz actualizada

print(wide_matrix)

```

En el quinto escenario obviamente obtenemos MU=VPN=0

Con lo cual notamos que debemos tener cuidado cuando hay muchas defunciones y tasas de interés más bajas que la tasa base.

### c. Análisis por simulación

#### c.1. Hipótesis para la simulación de las variables a analizar

Elegiremos tasa de interés y tabla de mortalidad como las variables a analizar.

Realizaremos simulaciones para la tasa de interés y la tabla de mortalidad, con la finalidad de obtener una distribución de los valores que pueden obtener VPN y MU conjuntamente.

Para la tasa de interés, supondremos que sigue una distribución normal recortada en 0 con media de 7.5% y desviación estándar de 1.5%.

Para la tabla de mortalidad, supondremos que la $\alpha$ de nuestro modelo Gamma sigue una distribución normal recortada en 0.

#### c.2. Histograma de 1000 realizaciones de VPN y MU

Procedemos a mostrar los histogramas de las 1000 realizaciones estocásticas sobre tasa de interés y tabla de mortalidad de VPN y MU. (Nota: se fijó una semilla de 191654)

```{r, echo=FALSE}
library(truncnorm) # necesitarás esta biblioteca para generar números de una distribución normal truncada

set.seed(191654)

# Simulación de la tasa de interés
simulaciones_tasa_interes <- truncnorm::rtruncnorm(1000, a = 0, mean = 0.075, sd = 0.015) # Distribución normal truncada en 0

# Simulación de alpha para la tabla de mortalidad
simulaciones_alpha <- truncnorm::rtruncnorm(1000, a = 0, mean=7, sd = 1.5) # 

#funciones auxiliares

medidaVPNdf <- function(iTasaEstimada, tablaMortalidadEstimada){
   #ktemo solo está entre 1 a n
  iTasaEstimada <<- iTasaEstimada
  tablaMortalidadEstimada <<- generate_mortality_table_gamma(tablaMortalidadEstimada)
  resultado <- medidaVPN()
  return(resultado)
}

medidaMUdf <- function(iTasaEstimada, tablaMortalidadEstimada){
  iTasaEstimada <<- iTasaEstimada
  tablaMortalidadEstimada <<- generate_mortality_table_gamma(tablaMortalidadEstimada)
  resultado <- medidaMU()
  return(resultado)
}
# Crear un dataframe con las simulaciones
df_simulaciones <- data.frame(
  TasaEstimada = simulaciones_tasa_interes,
  AlphaEstimado = simulaciones_alpha
)

# Usar mutate para agregar las medidas VPN y MU al dataframe
df_resultados <- df_simulaciones %>%
  rowwise() %>%
  mutate(
    VPN = medidaVPNdf(TasaEstimada, AlphaEstimado),
    MU = medidaMUdf(TasaEstimada, AlphaEstimado)
  )

# Histograma para VPN
ggplot(df_resultados, aes(x=VPN)) + 
  geom_histogram(fill="steelblue", color="black", bins=50, alpha=0.7) + 
  labs(title="Histograma de VPN",
       x="Valor de VPN",
       y="Frecuencia") + 
  theme_minimal()

# Histograma para MU
ggplot(df_resultados, aes(x=MU)) + 
  geom_histogram(fill="steelblue", color="black", bins=50, alpha=0.7) + 
  labs(title="Histograma de MU",
       x="Valor de MU",
       y="Frecuencia") + 
  theme_minimal()

```

#### c.3. Promedio y desviación estándar de las 1000 realizaciones de VPN y MU

Los promedios y desviación estándar son los siguientes:

```{r, echo=FALSE}
library(knitr)

# Calcular el promedio y desviación estándar
promedio_VPN <- mean(df_resultados$VPN)
desviacion_VPN <- sd(df_resultados$VPN)

promedio_MU <- mean(df_resultados$MU)
desviacion_MU <- sd(df_resultados$MU)

# Crear un dataframe con los resultados
df_resumen <- data.frame(
  Medida = c("VPN", "MU"),
  Promedio = c(promedio_VPN, promedio_MU),
  Desviacion_Estandar = c(desviacion_VPN, desviacion_MU)
)

# Imprimir la tabla en formato bonito
kable(df_resumen, caption = "Promedio y desviación estándar de las 1000 realizaciones de VPN y MU", digits = 4)

```

Es decir, si en general suponiendo que la mayoría de las tasas de intérés se encuentran en el rango de 6% a 9% y que la mayoría de las $\alpha$ se encuentran en el rango de 6.5 a 8.5, entonces podemos esperar que el VPN y la MU lleguen a ser rentables, aunque igual hay que estar muy pendientes ante bajas en la tasa de interés y muchas defunciones de las esperadas, porque se puede apreciar que el VPN y la MU son muy sensibles a estos cambios, y que hay riesgo de que no sea rentable el producto con una confianza del `r sum(df_resultados$MU<=0)/10`%.


# Para una cartera de 100 asegurados: Fondo Total


## 1. Asset-share

(Fórmula para el cálculo y valores obtenidos para toda la vigencia de la póliza) 

Utilizaremos la fórmula recursiva para calcular el Asset-share, contando con los valores observados de tasa de interés, mortalidad promedio, costos asociados a la prima de emisión y renovación promedio, y por último los costos asociados a la liquidación por muerte promedio.

$$\actsymb[k+1]{\mathit{AS}}{}=\frac{[\actsymb[k]{\mathit{AS}}{}+G_{k}(1-c_{k}^{o})-e_{k}^{o}](1+i_{k,k+1}^{o})-q_{x+k}^{o}(b_{k+1}(1+propb_{k}^{o})+E_{k+1}^{o}))}{p_{x+k}^{o}}$$

Con lo cual los valores de Asset-share para toda la vigencia de la póliza son los siguientes:

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Creamos los valores ASSETSHARE
# Calcular los valores
kTemp_valores <- 0:19
assetShare_valores <- sapply(kTemp_valores, function(k) assetShare(k, funcInteres, funcPrimaCostos, funcMuerteCostos, funcMortalidad, primaRecargada))


# Crear un data.frame con los resultados
df <- data.frame(kTemp = kTemp_valores, assetShare = assetShare_valores)

print(df)



```



## 2. Estimación del Fondo Total mediante el Asset-share

(Fórmula para el cálculo y valores obtenidos para toda la vigencia de la póliza)

Utilizaremos la siguiente fórmula para calcular el Fondo Total, suponiendo que conocemos exactamente cúantos asegurados tenemos en cada año:

$$\actsymb[k+1]{\mathit{AS}}{}=\frac{[\actsymb[k]{\mathit{AS}}{}+G_{k}(1-c_{k}^{o})-e_{k}^{o}](1+i_{k,k+1}^{o})-q_{x+k}^{o}(b_{k+1}(1+propb_{k}^{o})+E_{k+1}^{o}))}{p_{x+k}^{o}}$$

$$\actsymb[k]{\mathit{FT}}{}=\lx{x+k}[o] \actsymb[k]{\mathit{AS}}{}$$

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Creamos los valores del fondo

# Calcular los valores

kTemp_valores <- 0:19

# Inicializa lx con un valor base de 100,000
lx <- numeric(n+1)
lx[1] <- 100  # o el valor base que elijas

# Calcula los valores lx utilizando la relación con qx
for(i in 2:(length(lx))) {
  lx[i] <- lx[i-1] - tabla_mortalidad$dx[i-1]
}

# Almacenar los valores lx en un dataframe
df_lx <- data.frame(lx = lx)

# Multiplicar assetShare por l_x+k
df$fondo_total <- df$assetShare * df_lx$lx

# Ver el resultado
print(df)

```

# Análisis de Rentabilidad

## 1. Utilidades

(Fórmula para el cálculo y valores obtenidos para toda la vigencia de la póliza)

Calcularemos el fondo total de lo que estimamos que tenemos como si calcularamos el Asset-Share con lo que ocurrió realmente en cuanto a muertes, utilizamos los demás supuestos promedios observados, y además siempre topamos o completamos el Asset-Share con el valor que debemos tener de la póliza recargada.

$$\actsymb[k+1]{\mathit{AS}^{*}}{}=\frac{[\actsymb[k]{\mathit{AS}^{*}}{}+G_{k}(1-c_{k}^{o})-e_{k}^{o}](1+i_{k,k+1}^{o})-q_{x+k}^{o}(b_{k+1}(1+propb_{k}^{o})+E_{k+1}^{o}))}{p_{x+k}^{o}}$$
$$\actsymb[k]{\mathit{FT}}{}=\lx{x+k}[o] \actsymb[k]{\mathit{AS}^{*}}{}$$



```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Calcular los valores
kTemp_valores <- 0:19
assetShare_valores <- sapply(kTemp_valores, function(k) assetShare2(k, funcInteres, funcPrimaCostos, funcMuerteCostos, funcMortalidad2, primaRecargada))


# Crear un data.frame con los resultados
df <- data.frame(kTemp = kTemp_valores, assetShareEstrella = assetShare_valores)

df$fondo_total <- df$assetShareEstrella * df_lx$lx

utilidades <- (df$fondo_total-(tablaValoresPolizaAsociadosRecargada$Vx)*df_lx$lx)/100

# Crear un dataframe con el vector de utilidades

df_utilidades <- data.frame(k = 0:(length(utilidades)-1), Utilidades = utilidades)

print(df_utilidades)

```

Es decir, nuestro producto parece no ser rentable la mayor parte del tiempo. Por lo que realizaremos medidas para determinar si es rentable o no.

## 2. VPN

(Fórmula para el cálculo y valor obtenido)

```{r, echo=FALSE, warning=FALSE, message=FALSE}
medidaVPNFT <- function(rCC=.16){
   #ktemo solo está entre 1 a n
  v <- 1/(1+rCC)
  resultado <- 0
  for (kTemp in seq(1,n,1)){
    resultado <- resultado + (df_utilidades$Utilidades[kTemp+1]*v^(kTemp))
  }
  return(resultado)
}
```

Con lo cual la medida de rentabilidad de VPN para este producto dado lo observado es de `r medidaVPNFT()`.

## 3. MU

(Fórmula para el cálculo y valor obtenido)

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Cuidado con kTemp, está trasladado
medidaMUFT <- function(rCC=.16){
  v <- 1/(1+rCC)
  resultado <- 0
  for (kTemp in seq(1,mPrimas,1)){
    resultado <- resultado + primaRecargada*v^(kTemp-1)
  }
  return(medidaVPNFT()/resultado)
}
```

Con lo cual la medida de rentabilidad de MU para este producto dado lo observado es de `r medidaMUFT()`.

En conclusión, el producto no fue rentable, ya que la medida de rentabilidad de MU fue negativa. Esto se debió principalmente a la mayor cantidad de defunciones que no se esperaban. Y como se advirtió en el análisis de stress-testing, el producto es muy sensible a las defunciones y había que tenerse cuidado porque había cierto riesgo probable de que no fuera rentable. 

Solo para ilustrar este efecto mostraremos el cambio de la mortalidad con la siguiente gráfica, el cual lineal y terminó de desarrollar más pérdidas que utilidades:

```{r, echo=FALSE, warning=FALSE, message=FALSE}

# Crear gráfica
ggplot(data = tabla_mortalidad, aes(x = x, y = lx)) +
  geom_line() + 
  labs(title = "Función de supervivencia lx", 
       x = "Edad x", 
       y = "Número de supervivientes lx") + 
  theme_minimal()

```

# Referencias

Sánchez, Marcelino, (2023). Notas de la clase de modelos actuariales con la profesora María Mercedes Gregorio Domínguez. Instituto Tecnológico Autónomo de México (ITAM).

Código en R del documento:

Sánchez, Marcelino, (2023). modelos.Actuariales_examen_1. GitHub. https://github.com/Marce2021M/modelos.Actuariales_examen_1
